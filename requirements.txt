main site requirements
======================

EASY STATIC
~~~~~~~~~~~
templating
footnotes / popups infrastructure
display texts
- fragmented views
- apparatus
- attribution
- links to other relevant resources (eg. facs, edition)
display facsimiles
- jump by work, section, lineation, page
- zoom/pan
- attribution, copyright + link
"static" pages (with attribution!)
- documentation of XQuery modules/queries
- documentation of editorial practices
- about
- UI help
menus, landing pages
- plays/poems landing pages
- editions
- filterable facsimile lists
- filterable document lists
- facsimile info pages
ZIP bundles of related TEI documents +/ full corpus
feedback -- just use mailto: link with prefilled subj/URL content
ilinks -- could replace with some kind of TEI ref

MAYBE STATIC
~~~~~~~~~~~~
texts analysis -- some will be easier than others, out-source some
integrate with user database app for logins -- might be able to do this entirely in JS

DYNAMIC
~~~~~~~
texts search
facsimile search (tied to texts)

TESTING + DEPLOYMENT
~~~~~~~~~~~~~~~~~~~~
xquery unit tests
HTML/CSS/JS regression tests
use node under ant for
- eslint
- stylelint
- phantom/casper/etc
data correctness tests
- referencial integrity
- schema validation
Jenkins tasks to do validation + deployment


NON-REQUIREMENTS
~~~~~~~~~~~~~~~~~~
IML editor
iembedding texts/fragments
SIP, Scene, SLT, linksdb, imagedb
user database (separate eXist app)
Peeved
